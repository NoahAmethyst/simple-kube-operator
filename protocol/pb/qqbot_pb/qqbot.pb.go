// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: qqbot.proto

package qqbot_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qqbot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_qqbot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_qqbot_proto_rawDescGZIP(), []int{0}
}

type SendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Chat    int64  `protobuf:"varint,2,opt,name=chat,proto3" json:"chat,omitempty"`
	Group   bool   `protobuf:"varint,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qqbot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_qqbot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_qqbot_proto_rawDescGZIP(), []int{1}
}

func (x *SendMsgReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMsgReq) GetChat() int64 {
	if x != nil {
		return x.Chat
	}
	return 0
}

func (x *SendMsgReq) GetGroup() bool {
	if x != nil {
		return x.Group
	}
	return false
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Code     int64  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// Only exist in friend
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	// Only exist when call self to get bot info
	Owner int64 `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	// Only exist in group member
	CardName      string `protobuf:"bytes,4,opt,name=cardName,proto3" json:"cardName,omitempty"`
	JoinTime      int64  `protobuf:"varint,5,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	LastSpeakTime int64  `protobuf:"varint,6,opt,name=lastSpeakTime,proto3" json:"lastSpeakTime,omitempty"`
	SpecialTitle  string `protobuf:"bytes,7,opt,name=specialTitle,proto3" json:"specialTitle,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qqbot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_qqbot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_qqbot_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *User) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *User) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *User) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *User) GetCardName() string {
	if x != nil {
		return x.CardName
	}
	return ""
}

func (x *User) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *User) GetLastSpeakTime() int64 {
	if x != nil {
		return x.LastSpeakTime
	}
	return 0
}

func (x *User) GetSpecialTitle() string {
	if x != nil {
		return x.SpecialTitle
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner           int64   `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	GroupCreateTime uint32  `protobuf:"varint,4,opt,name=groupCreateTime,proto3" json:"groupCreateTime,omitempty"`
	GroupLevel      uint32  `protobuf:"varint,5,opt,name=GroupLevel,proto3" json:"GroupLevel,omitempty"`
	MemberCount     uint64  `protobuf:"varint,6,opt,name=MemberCount,proto3" json:"MemberCount,omitempty"`
	MaxMemberCount  uint64  `protobuf:"varint,7,opt,name=MaxMemberCount,proto3" json:"MaxMemberCount,omitempty"`
	Members         []*User `protobuf:"bytes,8,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qqbot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_qqbot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_qqbot_proto_rawDescGZIP(), []int{3}
}

func (x *Group) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Group) GetGroupCreateTime() uint32 {
	if x != nil {
		return x.GroupCreateTime
	}
	return 0
}

func (x *Group) GetGroupLevel() uint32 {
	if x != nil {
		return x.GroupLevel
	}
	return 0
}

func (x *Group) GetMemberCount() uint64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Group) GetMaxMemberCount() uint64 {
	if x != nil {
		return x.MaxMemberCount
	}
	return 0
}

func (x *Group) GetMembers() []*User {
	if x != nil {
		return x.Members
	}
	return nil
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Self    *User    `protobuf:"bytes,2,opt,name=self,proto3" json:"self,omitempty"`
	Friends []*User  `protobuf:"bytes,3,rep,name=friends,proto3" json:"friends,omitempty"`
	Groups  []*Group `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qqbot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_qqbot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_qqbot_proto_rawDescGZIP(), []int{4}
}

func (x *Resp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Resp) GetSelf() *User {
	if x != nil {
		return x.Self
	}
	return nil
}

func (x *Resp) GetFriends() []*User {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *Resp) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_qqbot_proto protoreflect.FileDescriptor

var file_qqbot_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x71, 0x71, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x50, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0xe6, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x04,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x12,
	0x25, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x32, 0xaf, 0x01, 0x0a,
	0x0c, 0x51, 0x51, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x53, 0x65,
	0x6c, 0x66, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x26, 0x0a, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x14,
	0x5a, 0x12, 0x71, 0x71, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x62, 0x2f, 0x3b, 0x71, 0x71, 0x62, 0x6f,
	0x74, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qqbot_proto_rawDescOnce sync.Once
	file_qqbot_proto_rawDescData = file_qqbot_proto_rawDesc
)

func file_qqbot_proto_rawDescGZIP() []byte {
	file_qqbot_proto_rawDescOnce.Do(func() {
		file_qqbot_proto_rawDescData = protoimpl.X.CompressGZIP(file_qqbot_proto_rawDescData)
	})
	return file_qqbot_proto_rawDescData
}

var file_qqbot_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_qqbot_proto_goTypes = []interface{}{
	(*Empty)(nil),      // 0: proto.Empty
	(*SendMsgReq)(nil), // 1: proto.SendMsgReq
	(*User)(nil),       // 2: proto.User
	(*Group)(nil),      // 3: proto.Group
	(*Resp)(nil),       // 4: proto.Resp
}
var file_qqbot_proto_depIdxs = []int32{
	2, // 0: proto.Group.members:type_name -> proto.User
	2, // 1: proto.Resp.self:type_name -> proto.User
	2, // 2: proto.Resp.friends:type_name -> proto.User
	3, // 3: proto.Resp.groups:type_name -> proto.Group
	1, // 4: proto.QQBotService.SendMsg:input_type -> proto.SendMsgReq
	0, // 5: proto.QQBotService.Self:input_type -> proto.Empty
	0, // 6: proto.QQBotService.Friends:input_type -> proto.Empty
	0, // 7: proto.QQBotService.Groups:input_type -> proto.Empty
	4, // 8: proto.QQBotService.SendMsg:output_type -> proto.Resp
	4, // 9: proto.QQBotService.Self:output_type -> proto.Resp
	4, // 10: proto.QQBotService.Friends:output_type -> proto.Resp
	4, // 11: proto.QQBotService.Groups:output_type -> proto.Resp
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_qqbot_proto_init() }
func file_qqbot_proto_init() {
	if File_qqbot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qqbot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qqbot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qqbot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qqbot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qqbot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qqbot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qqbot_proto_goTypes,
		DependencyIndexes: file_qqbot_proto_depIdxs,
		MessageInfos:      file_qqbot_proto_msgTypes,
	}.Build()
	File_qqbot_proto = out.File
	file_qqbot_proto_rawDesc = nil
	file_qqbot_proto_goTypes = nil
	file_qqbot_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QQBotServiceClient is the client API for QQBotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QQBotServiceClient interface {
	SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*Resp, error)
	Self(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Resp, error)
	Friends(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Resp, error)
	Groups(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Resp, error)
}

type qQBotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQQBotServiceClient(cc grpc.ClientConnInterface) QQBotServiceClient {
	return &qQBotServiceClient{cc}
}

func (c *qQBotServiceClient) SendMsg(ctx context.Context, in *SendMsgReq, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/proto.QQBotService/SendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQBotServiceClient) Self(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/proto.QQBotService/Self", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQBotServiceClient) Friends(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/proto.QQBotService/Friends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQBotServiceClient) Groups(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/proto.QQBotService/Groups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QQBotServiceServer is the server API for QQBotService service.
type QQBotServiceServer interface {
	SendMsg(context.Context, *SendMsgReq) (*Resp, error)
	Self(context.Context, *Empty) (*Resp, error)
	Friends(context.Context, *Empty) (*Resp, error)
	Groups(context.Context, *Empty) (*Resp, error)
}

// UnimplementedQQBotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQQBotServiceServer struct {
}

func (*UnimplementedQQBotServiceServer) SendMsg(context.Context, *SendMsgReq) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg not implemented")
}
func (*UnimplementedQQBotServiceServer) Self(context.Context, *Empty) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Self not implemented")
}
func (*UnimplementedQQBotServiceServer) Friends(context.Context, *Empty) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Friends not implemented")
}
func (*UnimplementedQQBotServiceServer) Groups(context.Context, *Empty) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Groups not implemented")
}

func RegisterQQBotServiceServer(s *grpc.Server, srv QQBotServiceServer) {
	s.RegisterService(&_QQBotService_serviceDesc, srv)
}

func _QQBotService_SendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQBotServiceServer).SendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.QQBotService/SendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQBotServiceServer).SendMsg(ctx, req.(*SendMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQBotService_Self_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQBotServiceServer).Self(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.QQBotService/Self",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQBotServiceServer).Self(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQBotService_Friends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQBotServiceServer).Friends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.QQBotService/Friends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQBotServiceServer).Friends(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQBotService_Groups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQBotServiceServer).Groups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.QQBotService/Groups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQBotServiceServer).Groups(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _QQBotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.QQBotService",
	HandlerType: (*QQBotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMsg",
			Handler:    _QQBotService_SendMsg_Handler,
		},
		{
			MethodName: "Self",
			Handler:    _QQBotService_Self_Handler,
		},
		{
			MethodName: "Friends",
			Handler:    _QQBotService_Friends_Handler,
		},
		{
			MethodName: "Groups",
			Handler:    _QQBotService_Groups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qqbot.proto",
}
